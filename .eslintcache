[{"C:\\Users\\Natan-PC\\Documents\\Projeto Website\\react-website\\src\\App.js":"1","C:\\Users\\Natan-PC\\Documents\\Projeto Website\\react-website\\src\\index.js":"2","C:\\Users\\Natan-PC\\Documents\\Projeto Website\\react-website\\src\\Components\\Navbar.js":"3","C:\\Users\\Natan-PC\\Documents\\Projeto Website\\react-website\\src\\Components\\Button.js":"4"},{"size":352,"mtime":1607200875763,"results":"5","hashOfConfig":"6"},{"size":150,"mtime":1607195451696,"results":"7","hashOfConfig":"6"},{"size":2639,"mtime":1607208790393,"results":"8","hashOfConfig":"6"},{"size":804,"mtime":1607205923188,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wpxum7",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\Users\\Natan-PC\\Documents\\Projeto Website\\react-website\\src\\App.js",[],"C:\\Users\\Natan-PC\\Documents\\Projeto Website\\react-website\\src\\index.js",[],["21","22"],"C:\\Users\\Natan-PC\\Documents\\Projeto Website\\react-website\\src\\Components\\Navbar.js",["23"],"import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport { Button } from './Button';\r\n\r\nfunction Navbar() {\r\n    const [click, setClick] = useState(false)\r\n    // Criando alguns estados para os buttons\r\n    const [button, setButton] = useState(true)\r\n    // Função que vai definir o click e o valoe que quero que seja oposto\r\n    const handleClick = () => setClick(!click)\r\n    const closeMobileMenu = () => setClick(false)\r\n    // Função que vai exibir o button no mobile\r\n    const showButton = () => {\r\n        if(window.innerWidth <= 960) {\r\n            setButton(false)\r\n        } else {\r\n            setButton(true)\r\n        }\r\n    }\r\n\r\n    // Ponto de ouvinte do evento\r\n    window.addEventListener(\"resize\", showButton)\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar\">\r\n                <div className=\"navbar-container\">\r\n                    <Link to=\"/\" className=\"navbar-logo\">\r\n                        TRVL <i className=\"fab fa-typo3\"/>\r\n                    </Link>\r\n                    <div className=\"menu-icon\" onClick={handleClick}>\r\n                        <i className={click ? \"fas fa-times\" : \"fas fa-bars\"} />\r\n                    </div>\r\n                    {/* Definindo lista do menu hamburguer para o mobile */}\r\n                    <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/services\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                                Services\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/products\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                                Products\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/sign-up\" className=\"nav-links-mobile\" onClick={closeMobileMenu}>\r\n                                Sign Up\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                    {button && <Button buttonStyle=\"btn--outline\">SIGN UP</Button>}\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\Natan-PC\\Documents\\Projeto Website\\react-website\\src\\Components\\Button.js",["24","25","26"],"import React from 'react';\r\nimport './Buttons.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst STYLES = [\"btn--primary\", \"btn--outline\"]\r\n\r\nconst SIZES = [\"btn--medium\", \"btn--large\"]\r\n\r\nexport const Button = ({\r\n    children,\r\n    type,\r\n    onClick,\r\n    buttonStyle,\r\n    buttonSize\r\n}) => {\r\n    // Função que vai verificar o estilo do botão\r\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0]\r\n\r\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\r\n\r\n    return(\r\n        <Link to=\"/sign-up\" className=\"btn-mobile\">\r\n            <button\r\n            className={\"btn ${checkButtonStyle} ${checkButtonSize}\"} onClick={onClick}\r\n            type={type}>\r\n                {children}\r\n            </button>\r\n        </Link>\r\n    )\r\n}",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":26,"nodeType":"33","messageId":"34","endLine":1,"endColumn":35},{"ruleId":"31","severity":1,"message":"35","line":17,"column":11,"nodeType":"33","messageId":"34","endLine":17,"endColumn":27},{"ruleId":"31","severity":1,"message":"36","line":19,"column":11,"nodeType":"33","messageId":"34","endLine":19,"endColumn":26},{"ruleId":"37","severity":1,"message":"38","line":24,"column":24,"nodeType":"39","messageId":"40","endLine":24,"endColumn":68},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'checkButtonStyle' is assigned a value but never used.","'checkButtonSize' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation"]